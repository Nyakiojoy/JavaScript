function filterAndSort(filterFn, ...numbers) {
    // Filter the numbers using the provided function
    const filteredNumbers = numbers.filter(filterFn);

    // Sort the filtered numbers in ascending order
    return filteredNumbers.sort((a, b) => a - b);
}

// Example usage
const isEven = num => num % 2 === 0;
console.log(filterAndSort(isEven, 5, 3, 8, 6, 2));

function mergeObjects(...objs) {
    let mergedObjects = {};

    for (const obj of objs) {
        mergedObjects = { ...mergedObjects, ...obj };
    }

    return mergedObjects;
}

const obj1 = { a: 1, b: 2 };
const obj2 = { b: 3, c: 4 };
console.log(mergeObjects(obj1, obj2));

function combineArrays(...arrays) {
    const combinedArrays = arrays.reduce((previousArrays, nextArrays) => {
        return [...previousArrays, ...nextArrays];
    });
    return combinedArrays.filter((previous, next) => previous !== next) 
}
const arr1 = [1, 2, 3];
const arr2 = [3, 4, 5];             
const arr3 = [5, 6, 7];             
console.log(combineArrays(arr1, arr2, arr3));

function extractProperties(objectsArray, ...properties) {
    return objectsArray.map(obj =>
      properties.reduce((acc, prop) => {
        if (obj.hasOwnProperty(prop)) {
          acc[prop] = obj[prop];
        }
        return acc;
      }, {})
    );
  }
  
  const objects = [{ a: 1, b: 2, c: 3}, { a: 4, b: 5, c: 6}];
  console.log(extractProperties(objects, 'a', 'c'));

  